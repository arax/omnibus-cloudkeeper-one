#!/bin/bash
#
# Perform necessary cloudkeeper-one setup steps
# after package is installed.
#

PROGNAME=$(basename $0)
INSTALLER_DIR=`dirname $0`

DEST_DIR="/opt/cloudkeeper-one"
CONFIG_DIR="/etc/cloudkeeper-one"
SPOOL_DIR="/var/spool/cloudkeeper-one"
SYSD_DIR="/etc/systemd/system"
BIN_DIR="/usr/bin"

EMB_SYSD_DIR="${DEST_DIR}/examples/systemd"

CLOUDKEEPER_ONE_CONFIG_FILE="$CONFIG_DIR/cloudkeeper-one.yml"
CLOUDKEEPER_ONE_CONFIG_FILE_MOD="440"
CLOUDKEEPER_ONE_CONFIG_DIR_MOD="550"
CLOUDKEEPER_ONE_CONFIG_TPL_DIR="$CONFIG_DIR/templates/"
CLOUDKEEPER_ONE_APPLS_DIR="$SPOOL_DIR/appliances/"

RUBY_VERSION="2.4.0"
CLOUDKEEPER_ONE_VERSION="1.3.0"

EMBEDDED_GEM_ROOT="$DEST_DIR/embedded/lib/ruby/gems/$RUBY_VERSION/gems/cloudkeeper-one-$CLOUDKEEPER_ONE_VERSION"

function error_exit
{
  echo "${PROGNAME}: ${1:-"Unknown Error"}" 1>&2
  exit 1
}

# chown
chown -R root:root "$DEST_DIR" || error_exit "Cannot chown $DEST_DIR to root:root"

# create the cloudkeeper-one user
id -u cloudkeeper-one > /dev/null 2>&1
if [ "$?" -ne "0" ]; then
  useradd --system --shell /bin/false --home "$SPOOL_DIR" --create-home cloudkeeper-one || error_exit "Cannot create the cloudkeeper-one user account"
  usermod -L cloudkeeper-one || error_exit "Cannot lock the cloudkeeper-one user account"
fi

# prepare runtime dirs
mkdir -p $CLOUDKEEPER_ONE_APPLS_DIR || error_exit "Cannot create $CLOUDKEEPER_ONE_APPLS_DIR"
chown -R cloudkeeper-one:cloudkeeper-one $SPOOL_DIR || error_exit "Cannot chown $SPOOL_DIR to cloudkeeper-one:cloudkeeper-one"

# prepare configuration dir
mkdir -p $CONFIG_DIR || error_exit "Cannot create $CONFIG_DIR"
chown root:root $CONFIG_DIR || error_exit "Cannot chown $CONFIG_DIR to root:root"

if [ -f "$CLOUDKEEPER_ONE_CONFIG_FILE" ]; then
  CLOUDKEEPER_ONE_CONFIG_FILE="$CLOUDKEEPER_ONE_CONFIG_FILE.new"
fi

cp "$EMBEDDED_GEM_ROOT/config/cloudkeeper-one.yml" "$CLOUDKEEPER_ONE_CONFIG_FILE" || error_exit "Cannot create $CLOUDKEEPER_ONE_CONFIG_FILE"
chown cloudkeeper-one:cloudkeeper-one "$CLOUDKEEPER_ONE_CONFIG_FILE" || error_exit "Cannot chown $CLOUDKEEPER_ONE_CONFIG_FILE to cloudkeeper-one:cloudkeeper-one"
chmod "$CLOUDKEEPER_ONE_CONFIG_FILE_MOD" "$CLOUDKEEPER_ONE_CONFIG_FILE" || error_exit "Cannot chmod $CLOUDKEEPER_ONE_CONFIG_FILE to $CLOUDKEEPER_ONE_CONFIG_FILE_MOD"

if [ ! -d "$CLOUDKEEPER_ONE_CONFIG_TPL_DIR" ]; then
  mkdir -p "$CLOUDKEEPER_ONE_CONFIG_TPL_DIR" || error_exit "Cannot create $CLOUDKEEPER_ONE_CONFIG_TPL_DIR"
  cp "$EMBEDDED_GEM_ROOT"/config/templates/*.erb "$CLOUDKEEPER_ONE_CONFIG_TPL_DIR" || error_exit "Cannot copy default templates to $CLOUDKEEPER_ONE_CONFIG_TPL_DIR"
  chown -R cloudkeeper-one:cloudkeeper-one "$CLOUDKEEPER_ONE_CONFIG_TPL_DIR" || error_exit "Cannot chown $CLOUDKEEPER_ONE_CONFIG_TPL_DIR to cloudkeeper-one:cloudkeeper-one"
  chmod "$CLOUDKEEPER_ONE_CONFIG_DIR_MOD" "$CLOUDKEEPER_ONE_CONFIG_TPL_DIR" || error_exit "Cannot chmod $CLOUDKEEPER_ONE_CONFIG_TPL_DIR to $CLOUDKEEPER_ONE_CONFIG_DIR_MOD"
  chmod "$CLOUDKEEPER_ONE_CONFIG_FILE_MOD" "$CLOUDKEEPER_ONE_CONFIG_TPL_DIR"/* || error_exit "Cannot chmod content of $CLOUDKEEPER_ONE_CONFIG_TPL_DIR to $CLOUDKEEPER_ONE_CONFIG_FILE_MOD"
fi

# symlink bin files into $BIN_DIR
ln -sf "$DEST_DIR/bin/cloudkeeper-one" "$BIN_DIR" || error_exit "Cannot link cloudkeeper-one to $BIN_DIR"

# systemd
if [ -d "$SYSD_DIR" ] && [ -d "$EMB_SYSD_DIR" ]; then
  for SD_FILE in ${EMB_SYSD_DIR}/* ; do
    if [ -f "$SD_FILE" ]; then
      cp "$SD_FILE" "${SYSD_DIR}/" || error_exit "Could not copy $SD_FILE into $SYSD_DIR"
    fi
  done
fi

# change configuration defaults
sed -i "s/\/cloudkeeper\//\/cloudkeeper\-one\//g" "$CLOUDKEEPER_ONE_CONFIG_FILE" || error_exit "Could not adapt $CLOUDKEEPER_ONE_CONFIG_FILE to local configuration"

CLOUDKEEPER_ONE_CONFIG_TPL_DIR_ESCAPED=$(echo "$CLOUDKEEPER_ONE_CONFIG_TPL_DIR" | sed -e 's/[\/&]/\\&/g')
sed -i "s/template\-dir\: \#/template\-dir\: $CLOUDKEEPER_ONE_CONFIG_TPL_DIR_ESCAPED \#/g" "$CLOUDKEEPER_ONE_CONFIG_FILE" || error_exit "Could not adapt $CLOUDKEEPER_ONE_CONFIG_FILE to local configuration"

echo "Thank you for installing cloudkeeper-one!"

exit 0
